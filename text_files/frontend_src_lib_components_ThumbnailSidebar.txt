<script>
    // Props
    export let pages = [];
    export let manuscriptId = '';
    export let currentPageIndex = 0;
    export let onSelectPage = (index) => {};
    
    // State
    let sidebarElement;
    
    // Scroll selected page into view when it changes
    $: if (sidebarElement && pages.length > 0) {
        const index = currentPageIndex;
        const thumbnailElement = document.getElementById(`page-thumbnail-${index}`);
        if (thumbnailElement) {
            thumbnailElement.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        }
    }
</script>

<div class="thumbnail-sidebar" bind:this={sidebarElement}>
    <div class="sidebar-header">
        <h3>Pages</h3>
    </div>
    
    <div class="thumbnails-container">
        {#each pages as page, index}
            <div 
                id="page-thumbnail-{index}"
                class="thumbnail-item {index === currentPageIndex ? 'selected' : ''}" 
                on:click={() => onSelectPage(index)}
            >
                <div class="thumbnail-image">
                    <img 
                        src="/api/manuscripts/{manuscriptId}/pages/{page}/thumbnail" 
                        alt="Page {page}" 
                        loading="lazy"
                    />
                </div>
                <div class="thumbnail-label">
                    <span>{page}</span>
                </div>
            </div>
        {/each}
    </div>
</div>

<style>
    .thumbnail-sidebar {
        height: 100%;
        display: flex;
        flex-direction: column;
        background: #f8fafc;
        border-right: 1px solid #e2e8f0;
        overflow: hidden; /* Prevent overflow from affecting parent */
    }
    
    .sidebar-header {
        padding: 1rem;
        border-bottom: 1px solid #e2e8f0;
        flex-shrink: 0; /* Prevent header from shrinking */
    }
    
    .sidebar-header h3 {
        margin: 0;
        font-size: 1rem;
        font-weight: 600;
        color: #1a202c;
    }
    
    .thumbnails-container {
        flex: 1;
        overflow-y: auto; /* Only allow scrolling within this container */
        padding: 0.5rem;
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
        height: 100%; /* Fill available space */
    }
    
    .thumbnail-item {
        display: flex;
        flex-direction: column;
        border: 2px solid transparent;
        border-radius: 4px;
        cursor: pointer;
        transition: all 0.2s ease;
        padding: 0.5rem;
    }
    
    .thumbnail-item:hover {
        background: rgba(74, 158, 255, 0.05);
    }
    
    .thumbnail-item.selected {
        border-color: #4a9eff;
        background: rgba(74, 158, 255, 0.1);
    }
    
    .thumbnail-image {
        position: relative;
        width: 100%;
        height: 150px;
        border-radius: 4px;
        overflow: hidden;
        background: #e2e8f0;
    }
    
    .thumbnail-image img {
        width: 100%;
        height: 100%;
        object-fit: contain;
    }
    
    .thumbnail-label {
        margin-top: 0.5rem;
        text-align: center;
        font-size: 0.875rem;
        color: #4a5568;
    }
    
    /* Responsive adjustments */
    @media (max-width: 768px) {
        .thumbnail-sidebar {
            border-right: none;
            border-bottom: 1px solid #e2e8f0;
        }
        
        .thumbnails-container {
            flex-direction: row;
            overflow-x: auto;
            overflow-y: hidden;
            padding: 0.75rem;
        }
        
        .thumbnail-item {
            min-width: 120px;
            max-width: 120px;
        }
        
        .thumbnail-image {
            height: 100px;
        }
    }
</style>